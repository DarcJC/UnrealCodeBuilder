name: UnrealCodeBuild

# Controls when the workflow will run
inputs:
  enginePath:
    required: true
    type: string
  enginePathIsDownload:
    type: boolean
    required: true
  pluginPath:
    required: true
    type: string
  cacheId:
    type: string
    
# Steps represent a sequence of tasks that will be executed as part of the job

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: debug
      shell: pwsh
      run: |
        echo ${{ inputs.enginePath }}
        echo ${{ inputs.pluginPath }}
        echo ${{ github.action_path }}
        dir
        
    - name: Telemetry
      shell: pwsh
      continue-on-error: true
      run: |
        $Agent = "${{ github.repository }}
        $BuilderVersion = "${{ github.action_ref }}"
        $body = "{\""pluginName\"":\""CodeBuilder\"", \""appId\"": \""$Agent\"", \""friendlyVersion\"": \""$BuilderVersion\""}"; 
        curl.exe -H "Content-Type: application/json" -H "User-Agent: $Agent"--request POST -d $body https://api.codebuilder.guganana.com/api/usage
        
    - name: Get cached engine
      id: cached-engine
      uses: actions/cache@v3
      if: ${{ inputs.enginePathIsDownload }}
      with:
        path: ${{ github.action_path }}/Engine.7z
        key: ${{ inputs.enginePath }}+${{ cacheId }}

    - name: download and extract-7z-action
      if: ${{ inputs.enginePathIsDownload && !steps.cached-engine.outputs.cache-hit }}
      shell: pwsh
      run: Invoke-Webrequest -URI ${{ inputs.enginePath }} -OutFile ${{ github.action_path }}/Engine.7z
        
    - name: Copy compressed engine to working dir
      shell: pwsh
      if: ${{ !inputs.enginePathIsDownload }}
      run:  Copy-Item -Path "${{ inputs.enginePath }}" -Destination "${{ github.action_path }}/Engine.7z" -Force
      
    - name: extract-7z-action
      shell: pwsh
      run: ${{ github.action_path }}/7za.exe x "${{ github.action_path }}/Engine.7z" -o${{ github.action_path }}/Engine

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: install ue4cli
      shell: pwsh
      run: pip install ue4cli

    - name: Set root ue4cli
      shell: pwsh
      run: ue4 setroot "${{ github.action_path }}/Engine"

    - name: Create Plugins folder and move plugins
      shell: pwsh
      run: |
        New-Item "${{ github.action_path }}/Plugins" -itemType Directory
        New-Item "${{ github.action_path }}/Plugins/Plugin" -itemType Directory
        Copy-Item -Path "${{ inputs.pluginPath }}/*" -Destination "${{ github.action_path }}/Plugins/Plugin" -Recurse -Force
        dir

    - name: Run ue4cli
      shell: pwsh
      run: cd ${{ github.action_path }}/Plugins/Plugin; ue4 build # -NoPCH -NoSharedPCH -DisableUnity
