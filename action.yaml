name: UnrealCodeBuild

inputs:
  enginePath:
    required: true
    type: string
  enginePathIsDownload:
    type: boolean
    required: true
  projectPath:
    required: true
    type: string
  engineCacheId:
    required: false
    type: string
  outputFolder:
    required: false
    type: string
    default: "./.UnrealCodeBuilder/"
  buildFlags:
    required: false
    type: string
    default: ""
  skipCheckout:
    required: false
    type: boolean
    default: false
    

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      if: ${{ !inputs.skipCheckout }}
        
    # You can fork our repo and remove this step if you really want to stay anonymous
    - name: Sending one-time use telemetry
      shell: pwsh
      continue-on-error: true
      run: |
        $Agent = "${{ github.repository }}";
        $BuilderVersion = "1.0";
        $body = "{\""pluginName\"": \""CodeBuilder\"", \""appId\"":\""$Agent\"", \""versionFriendly\"":\""$BuilderVersion\"" }";
        curl.exe -H "Content-Type: application/json" -H "User-Agent: $Agent"--request POST -d $body https://api.codebuilder.guganana.com/api/usage;
        
    # Attempt to retrieve a cached version of the engine image so we can spare bandwith and improve step speeds
    # Make sure to use https://github.com/Guganana/MinimalUE to create a Unreal Engine compressed image so it is around 100MB rather than 50+GB
    - name: Get cached engine
      id: cached-engine
      uses: actions/cache@v3
      if: ${{ inputs.enginePathIsDownload }}
      with:
        path: ${{ github.action_path }}/Engine.7z
        key: "${{ inputs.enginePath }}+${{ inputs.engineCacheId }}"

    - name: Download Unreal Engine image from the web link
      if: ${{ inputs.enginePathIsDownload && !steps.cached-engine.outputs.cache-hit }}
      shell: pwsh
      run: Invoke-Webrequest -URI ${{ inputs.enginePath }} -OutFile ${{ github.action_path }}/Engine.7z
        
    - name: Copy compressed engine image to the working directory
      shell: pwsh
      if: ${{ !inputs.enginePathIsDownload }}
      run:  Copy-Item -Path "${{ inputs.enginePath }}" -Destination "${{ github.action_path }}/Engine.7z" -Force
  
    - name: Extract Unreal Engine image
      shell: pwsh
      run: ${{ github.action_path }}/7za.exe x "${{ github.action_path }}/Engine.7z" -o${{ github.action_path }}/Engine

    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: | 
          3.1.x
          5.0.x

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install ue4cli
      shell: pwsh
      run: pip install ue4cli

    - name: Set root ue4cli
      shell: pwsh
      run: ue4 setroot "${{ github.action_path }}/Engine"

    - name: Create compilation working directory and move targeted plugin
      shell: pwsh
      run: |
        $compilePath = "${{ github.action_path }}/Plugins/CompiledPlugin"
        New-Item $compilePath -itemType Directory
        Copy-Item -Path "${{ inputs.projectPath }}/*" -Destination $compilePath -Recurse -Force

    - name: Build plugin
      shell: pwsh
      run: |
        cd "${{ github.action_path }}/Plugins/CompiledPlugin"; 
        ue4 build ${{ inputs.buildFlags }}
      
    - name: Move built plugin into output folder
      shell: pwsh
      run: |
        $compilePath = "${{ github.action_path }}/Plugins/CompiledPlugin"
        New-Item ${{ inputs.outputFolder }} -itemType Directory
        Copy-Item -Path "$compilePath/*" -Destination ${{ inputs.outputFolder }} -Recurse -Force
        dir ${{ inputs.outputFolder }}
